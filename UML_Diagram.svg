<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background-color: rgb(255, 255, 255);" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="841px" height="1484px" viewBox="-0.5 -0.5 841 1484" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-04-28T18:23:58.916Z&quot; agent=&quot;5.0 (Windows)&quot; etag=&quot;pR0mzpeFcIcu_8Eg-70k&quot; version=&quot;12.9.6&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;Za5TCOOUqWrqnHi0fhaM&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-4-61-202-34-0"><rect x="4" y="61" width="202" height="34"/></clipPath><clipPath id="mx-clip-4-103-202-142-0"><rect x="4" y="103" width="202" height="142"/></clipPath><clipPath id="mx-clip-684-351-152-34-0"><rect x="684" y="351" width="152" height="34"/></clipPath><clipPath id="mx-clip-684-393-152-132-0"><rect x="684" y="393" width="152" height="132"/></clipPath><clipPath id="mx-clip-304-131-272-54-0"><rect x="304" y="131" width="272" height="54"/></clipPath><clipPath id="mx-clip-304-193-272-222-0"><rect x="304" y="193" width="272" height="222"/></clipPath><clipPath id="mx-clip-29-321-152-52-0"><rect x="29" y="321" width="152" height="52"/></clipPath><clipPath id="mx-clip-29-381-152-114-0"><rect x="29" y="381" width="152" height="114"/></clipPath><clipPath id="mx-clip-74-1041-312-34-0"><rect x="74" y="1041" width="312" height="34"/></clipPath><clipPath id="mx-clip-44-701-202-54-0"><rect x="44" y="701" width="202" height="54"/></clipPath><clipPath id="mx-clip-44-763-202-152-0"><rect x="44" y="763" width="202" height="152"/></clipPath><clipPath id="mx-clip-314-511-252-84-0"><rect x="314" y="511" width="252" height="84"/></clipPath><clipPath id="mx-clip-314-603-252-302-0"><rect x="314" y="603" width="252" height="302"/></clipPath><clipPath id="mx-clip-614-801-202-164-0"><rect x="614" y="801" width="202" height="164"/></clipPath><clipPath id="mx-clip-614-973-202-282-0"><rect x="614" y="973" width="202" height="282"/></clipPath></defs><g><path d="M 440 423.99 L 440 480" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 440 410.99 L 443.82 417.49 L 440 423.99 L 436.18 417.49 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 433 466 L 447 466 M 447 480 L 440 466 L 433 480" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 570 548 L 705 548 Q 715 548 715 558 L 715 770" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 722 770 L 715 756 L 708 770" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 105 240 L 105 290" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 98 276 L 112 276 M 112 290 L 105 276 L 98 290" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 56 L 0 30 L 210 30 L 210 56" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 56 L 0 240 L 210 240 L 210 56" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 56 L 210 56" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="104.5" y="47.5">LinkedList&lt;T&gt;</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-61-202-34-0)" font-size="12px"><text x="5.5" y="73.5"># head: T</text><text x="5.5" y="87.5"># tail: T</text></g><path d="M 0 94 L 210 94" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-103-202-142-0)" font-size="12px"><text x="5.5" y="115.5">+ getHead(): Node&lt;T&gt;*</text><text x="5.5" y="129.5">+ getTail(): Node&lt;T&gt;*</text><text x="5.5" y="143.5">+ insertHead(Node&lt;T&gt;*)</text><text x="5.5" y="157.5">+ insertTail(Node&lt;T&gt;*)</text><text x="5.5" y="171.5">+ insertBefore(Node&lt;T&gt;*, Node&lt;T&gt;*)</text><text x="5.5" y="185.5">+ remove(Node&lt;T&gt;*)</text><text x="5.5" y="199.5">+ getFromHead(int): Node&lt;T&gt;*</text><text x="5.5" y="213.5">+ getFromTail(int): Node&lt;T&gt;*</text><text x="5.5" y="227.5">+ getSize(): int</text></g><path d="M 680 346 L 680 320 L 840 320 L 840 346" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 680 346 L 680 520 L 840 520 L 840 346" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 680 346 L 840 346" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="759.5" y="337.5">Randomizer</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-684-351-152-34-0)" font-size="12px"><text x="685.5" y="363.5"># seedData: string</text><text x="685.5" y="377.5"># digitQueue: stringstream</text></g><path d="M 680 384 L 840 384" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-684-393-152-132-0)" font-size="12px"><text x="685.5" y="405.5">+ Randomizer()</text><text x="685.5" y="419.5">+ Randomizer(string)</text><text x="685.5" y="447.5"># getMoreBytes()</text><text x="685.5" y="461.5">+ giveExtraStuff(string)</text><text x="685.5" y="475.5">+ insertTime();</text><text x="685.5" y="489.5">+ randomHex(int): string</text><text x="685.5" y="503.5">+ compact();</text></g><path d="M 145 910 L 145 945 Q 145 955 155 955 L 220 955 Q 230 955 230 965 L 230 1010" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 223 996 L 237 996 M 237 1010 L 230 996 L 223 1010" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 993px; margin-left: 210px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">2-3</div></div></div></foreignObject><text x="210" y="997" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">2-3</text></switch></g><path d="M 308.96 598 L 207.5 598 Q 197.5 598 197.5 608 L 197.5 670" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190.5 663 L 204.5 663" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 580 153 L 750 153 Q 760 153 760 163 L 760 320" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 753 313 L 767 313" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 358px; height: 1px; padding-top: 75px; margin-left: 251px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; "><p>This UML is <code style="padding: 1px ; background-color: #eee ; border: 1px solid #777 ; border-radius: 2px">using namespace std;</code>.</p><p>The code is not.</p></div></div></div></foreignObject><text x="430" y="79" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">This UML is using namespace std;....</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 20px; margin-left: 440px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 24px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; font-weight: bold; white-space: nowrap; ">Secret Messaging System</div></div></div></foreignObject><text x="440" y="27" fill="#000000" font-family="Helvetica" font-size="24px" text-anchor="middle" font-weight="bold">Secret Messaging System</text></switch></g><path d="M 300 126 L 300 100 L 580 100 L 580 126" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 126 L 300 410 L 580 410 L 580 126" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 126 L 580 126" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="439.5" y="117.5">FileSystem</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-131-272-54-0)" font-size="12px"><text x="305.5" y="143.5"># users: LinkedList&lt;User&gt;</text><text x="305.5" y="157.5"># fileName: string</text></g><path d="M 300 184 L 580 184" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-304-193-272-222-0)" font-size="12px"><text x="305.5" y="205.5">+ init(string)+ save()</text><text x="305.5" y="219.5">+ login(string, string): User*</text><text x="305.5" y="233.5">+ isUsernameValid(string): bool</text><text x="305.5" y="261.5">+ isUsernameFree(string): bool</text><text x="305.5" y="289.5">+ addNewUser(User*)</text><text x="305.5" y="303.5"># getUserByName(string): User*</text><text x="305.5" y="345.5">+ viewMessages(User*)</text><text x="305.5" y="359.5">+ composeMessageMenu(User*)</text><text x="305.5" y="373.5">+ changePasswordMenu(User*)</text></g><path d="M 25 316 L 25 290 L 185 290 L 185 316" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 25 316 L 25 490 L 185 490 L 185 316" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 25 316 L 185 316" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="104.5" y="307.5">Node&lt;T&gt;</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-29-321-152-52-0)" font-size="12px"><text x="30.5" y="333.5"># payload: T</text><text x="30.5" y="347.5"># prev: Node&lt;T&gt;*</text><text x="30.5" y="361.5"># next: Node&lt;T&gt;*</text></g><path d="M 25 372 L 185 372" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-29-381-152-114-0)" font-size="12px"><text x="30.5" y="393.5">+ Node(T*)</text><text x="30.5" y="407.5">+ getPayload(): T*</text><text x="30.5" y="421.5">+ setPayload(T*)</text><text x="30.5" y="435.5">+ getPrev(): Node&lt;T&gt;*</text><text x="30.5" y="449.5">+ getNext(): Node&lt;T&gt;*</text><text x="30.5" y="463.5">+ setPrev(Node&lt;T&gt;*)</text><text x="30.5" y="477.5">+ setNext(Node&lt;T&gt;*)</text></g><path d="M 70 1036 L 70 1010 L 390 1010 L 390 1036" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 70 1036 L 70 1480 L 390 1480 L 390 1036" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 70 1036 L 390 1036" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="229.5" y="1027.5">BigNumber</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-74-1041-312-34-0)" font-size="12px"><text x="75.5" y="1053.5"># numDigits: int</text><text x="75.5" y="1067.5"># digits: uint16_t*</text></g><path d="M 70 1074 L 390 1074" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 310px; height: 1px; padding-top: 1085px; margin-left: 76px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 398px; overflow: hidden; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: nowrap; "><div>+ BigNumber()</div><div>+ BigNumber(int64)</div><div>+ BigNumber(bndigit*, int)<br /></div><div>+ BigNumber(std::string)</div><div><br /></div><div>+ directlyAssignDigits(bndigit*, int, 0xbe5afe)<br /></div><div>+ getDigit(int): bndigit<br /></div><div>+ getNumDigits(): int</div><div>+ isZero(): bool</div><div>+ deflate()</div><div>+ simpleDeflate()<br /></div><div>+ getShift(int): BigNumber</div><div>+ getLowestNDigits(int): BigNumber</div><div><br /></div><div>+ <u>modExp(BigNumber, BigNumber,</u></div><div>            <u>BigNumber)</u>: BigNumber<br /></div><div><br /></div><div>+ couldBePrime(): bool</div><div>+ fermatPrimalityTest(): bool</div><div>+ millerRabinTest(): bool</div><div>+ isProbablyPrime(): bool</div><div>+ <u>generateLikelyPrime(int, Randomizer)</u>: BigNumber<br /></div><div><br /></div><div>+ convertToHex(): std::string</div><div>+ dumpDigits()</div><div><br /></div><div>Operators: +, -, *, /, %, +=, -=, *=, /=, ==, !=, &lt;, &gt;, &lt;=, &gt;=<br /></div></div></div></div></foreignObject><text x="76" y="1097" fill="#000000" font-family="Helvetica" font-size="12px">+ BigNumber()...</text></switch></g><path d="M 40 696 L 40 670 L 250 670 L 250 696" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 40 696 L 40 910 L 250 910 L 250 696" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 40 696 L 250 696" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="144.5" y="687.5">RSAKey</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-44-701-202-54-0)" font-size="12px"><text x="45.5" y="713.5"># N: BigNumber</text><text x="45.5" y="727.5"># E: BigNumber</text><text x="45.5" y="741.5"># D: BigNumber</text></g><path d="M 40 754 L 250 754" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-44-763-202-152-0)" font-size="12px"><text x="45.5" y="775.5">+ RSAKey()</text><text x="45.5" y="789.5">+ RSAKey(int, Randomizer)</text><text x="45.5" y="803.5">+ RSAKey(BigNumber, BigNumber,</text><text x="45.5" y="817.5">        BigNumber)</text><text x="45.5" y="831.5">+ getN(): BigNumber</text><text x="45.5" y="845.5">+ getE(): BigNumber</text><text x="45.5" y="859.5">+ getD(): BigNumber</text><text x="45.5" y="873.5">+ generate(int, Randomizer)</text><text x="45.5" y="887.5">+ encrypt(std::string)</text><text x="45.5" y="901.5">+ decrypt(std::string)</text></g><path d="M 310 548 L 275 548 Q 265 548 265 538 L 265 179 Q 265 169 255 169 L 210 169" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 217 162 L 217 176" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 506 L 310 480 L 570 480 L 570 506" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 506 L 310 900 L 570 900 L 570 506" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 506 L 570 506" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="439.5" y="497.5">User</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-314-511-252-84-0)" font-size="12px"><text x="315.5" y="523.5"># username: string</text><text x="315.5" y="537.5"># messages: LinkedList&lt;Message&gt;</text><text x="315.5" y="551.5"># key: RSAKey</text><text x="315.5" y="565.5"># maskedDKey: string</text><text x="315.5" y="579.5"># maskSalt: string</text></g><path d="M 310 594 L 570 594" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-314-603-252-302-0)" font-size="12px"><text x="315.5" y="615.5">+ User()</text><text x="315.5" y="629.5">+ User(string, string, RSAKey, Randomizer)</text><text x="315.5" y="643.5">+ User(string, RSAKey, string, string)</text><text x="315.5" y="671.5">+ getUsername(): string</text><text x="315.5" y="685.5">+ getPublicKey(): RSAKey</text><text x="315.5" y="699.5">+ getMaskedDKey(): string</text><text x="315.5" y="713.5">+ getMaskSalt(): string</text><text x="315.5" y="727.5">+ unmaskKey(string): bool</text><text x="315.5" y="741.5"># maskKey(string, string)</text><text x="315.5" y="769.5">+ canDecrypt(): bool</text><text x="315.5" y="783.5">+ checkLogin(string, string): bool</text><text x="315.5" y="797.5">+ changePassword(string, string): bool</text><text x="315.5" y="811.5">+ showMessages()</text><text x="315.5" y="825.5">+ getNumMessages(): int</text><text x="315.5" y="839.5">+ getMessage(int): Message*</text><text x="315.5" y="853.5">+ readMessage(Message*)</text><text x="315.5" y="867.5">+ addMessage(Message*, bool)</text><text x="315.5" y="881.5">+ deleteMessage(int)</text></g><path d="M 610 796 L 610 770 L 820 770 L 820 796" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 796 L 610 1250 L 820 1250 L 820 796" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 610 796 L 820 796" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="714.5" y="787.5">Message</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-801-202-164-0)" font-size="12px"><text x="615.5" y="813.5"># id: int</text><text x="615.5" y="827.5"># from: string</text><text x="615.5" y="841.5"># date: string</text><text x="615.5" y="855.5"># storedSubject: string</text><text x="615.5" y="869.5"># storedBody: string</text><text x="615.5" y="883.5"># plainSubject: string</text><text x="615.5" y="897.5"># plainBody: string</text><text x="615.5" y="925.5"># unread: boolean</text><text x="615.5" y="939.5"># encrypted: boolean</text><text x="615.5" y="953.5"># decrypted: boolean</text></g><path d="M 610 964 L 820 964" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-614-973-202-282-0)" font-size="12px"><text x="615.5" y="985.5">+ Message()</text><text x="615.5" y="999.5">+ Message(int, string, string,</text><text x="615.5" y="1013.5">        string, string, bool, bool)</text><text x="615.5" y="1055.5">+ getID(): int</text><text x="615.5" y="1069.5">+ getSender(): string</text><text x="615.5" y="1083.5">+ getDate(): string</text><text x="615.5" y="1097.5">+ getStoredSubject(): string</text><text x="615.5" y="1111.5">+ getPlainSubject(): string</text><text x="615.5" y="1125.5">+ getStoredBody(): string</text><text x="615.5" y="1139.5">+ getPlainBody(): string</text><text x="615.5" y="1153.5">+ isUnread(): bool</text><text x="615.5" y="1167.5">+ isEncrypted(): bool</text><text x="615.5" y="1181.5">+ isDecrypted(): bool</text><text x="615.5" y="1209.5">+ recordDecryption(string, string)</text><text x="615.5" y="1223.5">+ markRead()</text><text x="615.5" y="1237.5">+ markUnread()</text></g><path d="M 300 153 L 270 153 Q 260 153 260 143 L 260 83 Q 260 73 250 73 L 210 73" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 217 66 L 217 80" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>